shardingRule:
  defaultDataSourceName: db_0
  defaultKeyGeneratorClassName: io.shardingjdbc.dbtest.core.yaml.fixture.IncrementKeyGenerator

  tables:
    t_order:
      actualDataNodes: db_${0..9}.t_order
      databaseStrategy:
        standard:
          shardingColumn: user_id
          preciseAlgorithmClassName: io.shardingjdbc.dbtest.core.yaml.fixture.SingleAlgorithm
      tableStrategy:
        inline:
          shardingColumn: id
          algorithmExpression: t_order
    t_order_item:
      actualDataNodes: db_${0..9}.t_order_item
      keyGeneratorColumnName: order_item_id
      keyGeneratorClassName: io.shardingjdbc.dbtest.core.yaml.fixture.DecrementKeyGenerator
      databaseStrategy:
        standard:
          shardingColumn: user_id
          preciseAlgorithmClassName: io.shardingjdbc.dbtest.core.yaml.fixture.SingleAlgorithm
      tableStrategy:
        inline:
          shardingColumn: id
          algorithmExpression: t_order_item

  bindingTables:
    - t_order,t_order_item

  defaultDatabaseStrategy:
    complex:
        shardingColumns: order_id, user_id
        algorithmClassName: io.shardingjdbc.dbtest.core.yaml.fixture.MultiAlgorithm
  defaultTableStrategy:
    complex:
      shardingColumns: id, order_id
      algorithmClassName: io.shardingjdbc.dbtest.core.yaml.fixture.MultiAlgorithm
  props:
      sql.show: true
