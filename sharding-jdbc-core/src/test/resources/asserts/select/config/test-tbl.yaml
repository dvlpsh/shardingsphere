
shardingRule:
  defaultDataSourceName: tbl

  defaultKeyGeneratorClass: io.shardingjdbc.dbtest.core.yaml.fixture.IncrementKeyGenerator

  tables:

    t_order:
      actualDataNodes: tbl.t_order_${0..9}
      tableStrategy:
        inline:
          shardingColumn: order_id
          algorithmExpression: t_order_${order_id % 10}
    t_order_item:
      actualDataNodes: tbl.t_order_item_${0..9}
      keyGeneratorColumnName: order_item_id
      keyGeneratorClass: io.shardingjdbc.dbtest.core.yaml.fixture.DecrementKeyGenerator
      #绑定表中其余的表的策略与第一张表的策略相
      tableStrategy:
        inline:
          shardingColumn: order_id
          algorithmExpression: t_order_item_${order_id % 10}

  bindingTables:
    - t_order,t_order_item

  props:
      sql.show: true