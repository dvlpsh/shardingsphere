<asserts>
    <ddl-assert id="assertCreateTable">
        <ddl-sub-assert sharding-rule-types="db" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateTable.xml" />
        <ddl-sub-assert sharding-rule-types="tbl" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateTable.xml" />
        <ddl-sub-assert sharding-rule-types="dbtbl" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateTable.xml" />
    </ddl-assert>
    
    <ddl-assert id="assertCreateTableIfNotExist">
        <ddl-sub-assert sharding-rule-types="db" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateTable.xml" />
        <ddl-sub-assert sharding-rule-types="tbl" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateTable.xml" />
        <ddl-sub-assert sharding-rule-types="dbtbl" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateTable.xml" />
    </ddl-assert>
    
    <ddl-assert id="assertCreateTemporaryTable">
        <ddl-sub-assert sharding-rule-types="db" clean-sql="DROP TABLE t_temp_log" table="t_temp_log" database-types="MySQL,PostgreSQL" expected-data-file="assertCreateTableTempLog.xml" />
        <ddl-sub-assert sharding-rule-types="tbl" clean-sql="DROP TABLE t_temp_log" table="t_temp_log" database-types="MySQL,PostgreSQL" expected-data-file="assertCreateTableTempLog.xml" />
        <ddl-sub-assert sharding-rule-types="dbtbl" clean-sql="DROP TABLE t_temp_log" table="t_temp_log" database-types="MySQL,PostgreSQL" expected-data-file="assertCreateTableTempLog.xml" />
    </ddl-assert>
    
    <ddl-assert id="assertCreateGlobalTemporaryTable">
        <ddl-sub-assert sharding-rule-types="db" clean-sql="DROP TABLE t_temp_log" table="t_temp_log" database-types="Oracle,PostgreSQL" expected-data-file="assertCreateTableTempLog.xml" />
        <ddl-sub-assert sharding-rule-types="tbl" clean-sql="DROP TABLE t_temp_log" table="t_temp_log" database-types="Oracle,PostgreSQL" expected-data-file="assertCreateTableTempLog.xml" />
        <ddl-sub-assert sharding-rule-types="dbtbl" clean-sql="DROP TABLE t_temp_log" table="t_temp_log" database-types="Oracle,PostgreSQL" expected-data-file="assertCreateTableTempLog.xml" />
    </ddl-assert>
    
    <ddl-assert id="assertCreateLocalTempTable">
        <ddl-sub-assert sharding-rule-types="db" clean-sql="DROP TABLE t_log" table="t_log" database-types="PostgreSQL" expected-data-file="assertCreateTable.xml" />
        <ddl-sub-assert sharding-rule-types="tbl" clean-sql="DROP TABLE t_log" table="t_log" database-types="PostgreSQL" expected-data-file="assertCreateTable.xml" />
        <ddl-sub-assert sharding-rule-types="dbtbl" clean-sql="DROP TABLE t_log" table="t_log" database-types="PostgreSQL" expected-data-file="assertCreateTable.xml" />
    </ddl-assert>
    
    <ddl-assert id="assertCreateUnloggedTable">
        <ddl-sub-assert sharding-rule-types="db" clean-sql="DROP TABLE t_log" table="t_log" database-types="PostgreSQL" expected-data-file="assertCreateTable.xml" />
        <ddl-sub-assert sharding-rule-types="tbl" clean-sql="DROP TABLE t_log" table="t_log" database-types="PostgreSQL" expected-data-file="assertCreateTable.xml" />
        <ddl-sub-assert sharding-rule-types="dbtbl" clean-sql="DROP TABLE t_log" table="t_log" database-types="PostgreSQL" expected-data-file="assertCreateTable.xml" />
    </ddl-assert>
    
    <ddl-assert id="assertCreateIndex">
        <ddl-sub-assert sharding-rule-types="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateIndex.xml" />
        <ddl-sub-assert sharding-rule-types="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateIndex.xml" />
        <ddl-sub-assert sharding-rule-types="dbtbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateIndex.xml" />
    </ddl-assert>
    
    <ddl-assert id="assertCreateUniqueIndex" init-sql="CREATE TABLE t_log(id int, status varchar(10))" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateUniqueIndex.xml">
        <ddl-sub-assert sharding-rule-types="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateUniqueIndex.xml" />
        <ddl-sub-assert sharding-rule-types="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateUniqueIndex.xml" />
        <ddl-sub-assert sharding-rule-types="dbtbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" clean-sql="DROP TABLE t_log" table="t_log" expected-data-file="assertCreateUniqueIndex.xml" />
    </ddl-assert>
</asserts>
