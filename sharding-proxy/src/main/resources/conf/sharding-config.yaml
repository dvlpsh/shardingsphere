dataSources:
  demo_ds_0: !!org.apache.commons.dbcp2.BasicDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://172.25.63.243:3306/demo_ds_0
    username: admin_user
    password: admin_database_123
  demo_ds_1: !!org.apache.commons.dbcp2.BasicDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://172.25.63.243:3306/demo_ds_1
    username: admin_user
    password: admin_database_123

shardingRule:
  tables:
    t_order:
      actualDataNodes: demo_ds_${0..1}.t_order_${0..1}
      tableStrategy:
        inline:
          shardingColumn: order_id
          algorithmExpression: t_order_${order_id % 2}
      keyGeneratorColumnName: order_id
    t_order_item:
      actualDataNodes: demo_ds_${0..1}.t_order_item_${0..1}
      #绑定表中其余的表的策略与第一张表的策略相同
      tableStrategy:
        inline:
          shardingColumn: order_id
          algorithmExpression: t_order_item_${order_id % 2}  

  bindingTables:
    - t_order,t_order_item
  
  #默认数据库分片策略
  defaultDatabaseStrategy:
    inline:
      shardingColumn: user_id
      algorithmExpression: demo_ds_${user_id % 2}

  defaultTableStrategy:
    none:
  defaultKeyGeneratorClass: io.shardingjdbc.core.keygen.DefaultKeyGenerator

  props:
    sql.show: true
